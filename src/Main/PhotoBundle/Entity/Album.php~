<?php

namespace Main\PhotoBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Main\BackendBundle\Entity\Customer;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * Album.
 *
 * @ORM\Table(name="album")
 * @ORM\Entity(repositoryClass="Main\PhotoBundle\Repository\AlbumRepository")
 */
class Album
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var int
     *
     * @ORM\ManyToOne(targetEntity="Main\BackendBundle\Entity\Customer", inversedBy="customerAlbums")
     * @ORM\JoinColumn(name="customer_id", referencedColumnName="id")
     */
    private $customer;

    /**
     * @var int
     *
     * @ORM\OneToOne(targetEntity="Photo")
     * @ORM\JoinColumn(name="main_photo_id", referencedColumnName="id")
     */
    private $mainPhoto;

    /**
     * @var string
     *
     * @ORM\Column(name="albumTitle", type="string", length=50, nullable=true)
     */
    private $albumTitle;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="dateCreated", type="datetime")
     */
    private $dateCreated;

    /**
     * @ORM\OneToMany(targetEntity="Photo", mappedBy="album")
     */
    private $photos;

    public function __construct()
    {
        $this->photos = new ArrayCollection();
    }
    /**
     * Get id.
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set customer.
     *
     * @param Customer $customer
     *
     * @return CustomerCity
     */
    public function setCustomer(Customer $customer = null)
    {
        $this->customer = $customer;

        return $this;
    }

    /**
     * Get customer.
     *
     * @return \Main\BackendBundle\Entity\Customer
     */
    public function getCustomer()
    {
        return $this->customer;
    }

    /**
     * Set albumTitle.
     *
     * @param string $albumTitle
     *
     * @return Album
     */
    public function setAlbumTitle($albumTitle)
    {
        $this->albumTitle = $albumTitle;

        return $this;
    }

    /**
     * Get albumTitle.
     *
     * @return string
     */
    public function getAlbumTitle()
    {
        return $this->albumTitle;
    }

    /**
     * Set dateCreated.
     *
     * @param \DateTime $dateCreated
     *
     * @return Album
     */
    public function setDateCreated($dateCreated)
    {
        $this->dateCreated = $dateCreated;

        return $this;
    }

    /**
     * Get dateCreated.
     *
     * @return \DateTime
     */
    public function getDateCreated()
    {
        return $this->dateCreated;
    }

    /**
     * Add albumPhotos.
     *
     * @param \Main\PhotoBundle\Entity\Photo $albumPhoto
     *
     * @return Album
     */
    public function addAlbumPhoto(Photo $albumPhoto)
    {
        $this->albumPhoto->add($albumPhoto);

        return $this;
    }

    /**
     * Remove albumPhoto.
     *
     * @param \Main\PhotoBundle\Entity\Photo $albumPhoto
     */
    public function removeAlbumPhoto(Photo $albumPhoto)
    {
        $this->albumPhoto->removeElement($albumPhoto);
    }

    /**
     * Get albumPhotos.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getAlbumPhotos()
    {
        return $this->albumPhotos->toArray();
    }

    /**
     * Set albumPhotos.
     *
     * @param \ArrayCollection $albumPhotos
     *
     * @return Album
     */
    public function setAlbumPhotos(ArrayCollection $albumPhotos)
    {
        foreach ($albumPhotos as $albumPhoto) {
            $this->albumPhotos->add($albumPhoto);
        }

        return $this;
    }
}
